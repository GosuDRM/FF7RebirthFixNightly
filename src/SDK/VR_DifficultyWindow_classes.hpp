#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VR_DifficultyWindow

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass VR_DifficultyWindow.VR_DifficultyWindow_C
// 0x0050 (0x0418 - 0x03C8)
class UVR_DifficultyWindow_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       UnderShinraMansion;                                // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnderColiseumForQuest;                             // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnderColiseum;                                     // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GoldSaucerArena;                                   // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VR;                                                // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImageSet*                           ListBgSet;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndListBox*                            SelectList;                                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Shadow2;                                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Title_Line;                                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Title;                                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VR_DifficultyWindow_C">();
	}
	static class UVR_DifficultyWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVR_DifficultyWindow_C>();
	}
};
static_assert(alignof(UVR_DifficultyWindow_C) == 0x000008, "Wrong alignment on UVR_DifficultyWindow_C");
static_assert(sizeof(UVR_DifficultyWindow_C) == 0x000418, "Wrong size on UVR_DifficultyWindow_C");
static_assert(offsetof(UVR_DifficultyWindow_C, UnderShinraMansion) == 0x0003C8, "Member 'UVR_DifficultyWindow_C::UnderShinraMansion' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, UnderColiseumForQuest) == 0x0003D0, "Member 'UVR_DifficultyWindow_C::UnderColiseumForQuest' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, UnderColiseum) == 0x0003D8, "Member 'UVR_DifficultyWindow_C::UnderColiseum' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, GoldSaucerArena) == 0x0003E0, "Member 'UVR_DifficultyWindow_C::GoldSaucerArena' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, VR) == 0x0003E8, "Member 'UVR_DifficultyWindow_C::VR' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, ListBgSet) == 0x0003F0, "Member 'UVR_DifficultyWindow_C::ListBgSet' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, SelectList) == 0x0003F8, "Member 'UVR_DifficultyWindow_C::SelectList' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, Shadow2) == 0x000400, "Member 'UVR_DifficultyWindow_C::Shadow2' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, Title_Line) == 0x000408, "Member 'UVR_DifficultyWindow_C::Title_Line' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, Txt_Title) == 0x000410, "Member 'UVR_DifficultyWindow_C::Txt_Title' has a wrong offset!");

}

