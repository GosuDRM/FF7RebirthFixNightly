#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VR_Tab

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass VR_Tab.VR_Tab_C
// 0x0030 (0x03F8 - 0x03C8)
class UVR_Tab_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Tutorial;                                          // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Normal;                                            // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Frame;                                             // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Clear;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VR_Tab_C">();
	}
	static class UVR_Tab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVR_Tab_C>();
	}
};
static_assert(alignof(UVR_Tab_C) == 0x000008, "Wrong alignment on UVR_Tab_C");
static_assert(sizeof(UVR_Tab_C) == 0x0003F8, "Wrong size on UVR_Tab_C");
static_assert(offsetof(UVR_Tab_C, Tutorial) == 0x0003C8, "Member 'UVR_Tab_C::Tutorial' has a wrong offset!");
static_assert(offsetof(UVR_Tab_C, Normal) == 0x0003D0, "Member 'UVR_Tab_C::Normal' has a wrong offset!");
static_assert(offsetof(UVR_Tab_C, Selected) == 0x0003D8, "Member 'UVR_Tab_C::Selected' has a wrong offset!");
static_assert(offsetof(UVR_Tab_C, Base) == 0x0003E0, "Member 'UVR_Tab_C::Base' has a wrong offset!");
static_assert(offsetof(UVR_Tab_C, Frame) == 0x0003E8, "Member 'UVR_Tab_C::Frame' has a wrong offset!");
static_assert(offsetof(UVR_Tab_C, Icon_Clear) == 0x0003F0, "Member 'UVR_Tab_C::Icon_Clear' has a wrong offset!");

}

