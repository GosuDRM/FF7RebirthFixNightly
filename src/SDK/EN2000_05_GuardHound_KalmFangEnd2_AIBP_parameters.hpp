#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EN2000_05_GuardHound_KalmFangEnd2_AIBP

#include "Basic.hpp"

#include "EndGame_structs.hpp"
#include "EndDataObject_structs.hpp"
#include "EndDataBase_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EN2000_05_GuardHound_KalmFangEnd2_AIBP.EN2000_05_GuardHound_KalmFangEnd2_AIBP_C.ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP
// 0x01A8 (0x01A8 - 0x0000)
struct EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UEndAIActionPackBase>> K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEndAIActionPackReturnInfo             CallFunc_RequestActionPackArray_ReturnValue;       // 0x0020(0x0014)(NoDestructor)
	int32                                         K2Node_Event_Damage_1;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndCharacter*                          K2Node_Event_InTarget;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_2;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InBind_1;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InGuard_1;                            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_KeepOver;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InCounter_1;                          // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Event_InBoneName_1;                         // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InAttributeWeak_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InDamageSourceID;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InSteal;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_heal;                                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_kill;                                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_justGuard;                            // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_block;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InMotionName;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_1;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIntValue;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InFloatValue;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetCurrentAbilityID_ReturnValue;          // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataObjectBattleAbilityAccessor    CallFunc_GetDataObjectBattleAbility_dataObjectBattleAbility; // 0x0090(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataObjectBattleAbility_ReturnValue;   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetFlag0_ReturnValue;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCombinationAbilityFromDataObjectBattleAbility_ReturnValue; // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          K2Node_Event_CauserChara;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_HandleId;                             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleReactionNotificationType            K2Node_Event_NotificationType;                     // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttackDirectionType                 K2Node_Event_AttackDirectionType;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestReactionCounter_ReturnValue;       // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestReactionCounter_ReturnValue_1;     // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestReactionCounter_ReturnValue_2;     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUCPC_ReturnValue;                       // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndAIBranch2                                 CallFunc_RatioBranch2_OutSignal;                   // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue_1;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInSyncAction_ReturnValue;               // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBreak_ReturnValue;                      // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndAIIntervalType                            K2Node_Event_IntervalType;                         // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ExtraIntervalId;                      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestAction_ReturnValue;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_Damage;                               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndCharacter*                          K2Node_Event_InChara;                              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName;                               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAbilityCommandType                  K2Node_Event_InCommandType;                        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InBind;                               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InGuard;                              // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InBoneName;                           // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InAttributeWeak;                      // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InDmgSrcID;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttributeType                       K2Node_Event_appendAttribute;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_JustHitRotYaw;                        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitPosition;                          // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InHeal;                               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InCounter;                            // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataObjectBattleDamageSourceAccessor K2Node_Event_dataObjectBattleDamageSource;         // 0x0140(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_Event_useAbilityUCPC;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataObjectBattleAbilityAccessor    K2Node_Event_dataObjectBattleAbility;              // 0x0168(0x0020)(HasGetValueTypeHash)
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue_2;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAIPC_ReturnValue;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorDistance_ReturnValue;             // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAIProwlCallType                           K2Node_Event_CallType;                             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B[0x1];                                      // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_TopPriorityActionId;                  // 0x019C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestActionTopPriority_ReturnValue;     // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP) == 0x000008, "Wrong alignment on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP");
static_assert(sizeof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP) == 0x0001A8, "Wrong size on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, EntryPoint) == 0x000000, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_MakeArray_Array) == 0x000008, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_GetCharacter_ReturnValue) == 0x000018, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_RequestActionPackArray_ReturnValue) == 0x000020, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_RequestActionPackArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_Damage_1) == 0x000034, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InTarget) == 0x000038, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InTarget' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InName_2) == 0x000040, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InName_2' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InBind_1) == 0x000048, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InBind_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InGuard_1) == 0x000049, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InGuard_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_KeepOver) == 0x00004A, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_KeepOver' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InCounter_1) == 0x00004B, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InCounter_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InBoneName_1) == 0x00004C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InBoneName_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InAttributeWeak_1) == 0x000054, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InAttributeWeak_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InDamageSourceID) == 0x000058, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InDamageSourceID' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InSteal) == 0x000060, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InSteal' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_heal) == 0x000061, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_heal' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_kill) == 0x000062, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_kill' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_justGuard) == 0x000063, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_justGuard' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_block) == 0x000064, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_block' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InMotionName) == 0x000068, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InMotionName' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InName_1) == 0x000070, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InName_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InIntValue) == 0x000078, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InIntValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InFloatValue) == 0x00007C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InFloatValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000080, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000081, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000082, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x000083, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_GetCurrentAbilityID_ReturnValue) == 0x000084, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_GetCurrentAbilityID_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_BooleanOR_ReturnValue) == 0x00008C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_GetDataObjectBattleAbility_dataObjectBattleAbility) == 0x000090, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_GetDataObjectBattleAbility_dataObjectBattleAbility' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_GetDataObjectBattleAbility_ReturnValue) == 0x0000B0, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_GetDataObjectBattleAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B1, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_GetFlag0_ReturnValue) == 0x0000B8, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_GetFlag0_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_IsCombinationAbilityFromDataObjectBattleAbility_ReturnValue) == 0x0000C1, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_IsCombinationAbilityFromDataObjectBattleAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C2, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C3, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_BooleanAND_ReturnValue_3) == 0x0000C4, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_CauserChara) == 0x0000C8, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_CauserChara' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_HandleId) == 0x0000D0, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_HandleId' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_NotificationType) == 0x0000D4, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_NotificationType' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_AttackDirectionType) == 0x0000D5, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_AttackDirectionType' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_RequestReactionCounter_ReturnValue) == 0x0000D6, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_RequestReactionCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_RequestReactionCounter_ReturnValue_1) == 0x0000D7, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_RequestReactionCounter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_RequestReactionCounter_ReturnValue_2) == 0x0000D8, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_RequestReactionCounter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_IsUCPC_ReturnValue) == 0x0000D9, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_IsUCPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_RatioBranch2_OutSignal) == 0x0000DA, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_RatioBranch2_OutSignal' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_GetCharacter_ReturnValue_1) == 0x0000E0, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_GetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_SwitchEnum_CmpSuccess) == 0x0000E8, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_IsInSyncAction_ReturnValue) == 0x0000E9, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_IsInSyncAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_IsBreak_ReturnValue) == 0x0000EA, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_IsBreak_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_Not_PreBool_ReturnValue) == 0x0000EB, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000EC, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_IntervalType) == 0x0000ED, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_IntervalType' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_ExtraIntervalId) == 0x0000F0, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_ExtraIntervalId' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_BooleanAND_ReturnValue_4) == 0x0000F8, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000F9, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_BooleanAND_ReturnValue_5) == 0x0000FA, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_RequestAction_ReturnValue) == 0x0000FB, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_RequestAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_Damage) == 0x0000FC, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InChara) == 0x000100, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InChara' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InName) == 0x000108, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InCommandType) == 0x000110, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InCommandType' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InBind) == 0x000111, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InBind' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InGuard) == 0x000112, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InGuard' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InBoneName) == 0x000114, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InBoneName' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InAttributeWeak) == 0x00011C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InAttributeWeak' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InDmgSrcID) == 0x000120, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InDmgSrcID' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_appendAttribute) == 0x000128, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_appendAttribute' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_JustHitRotYaw) == 0x00012C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_JustHitRotYaw' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_HitPosition) == 0x000130, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_HitPosition' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InHeal) == 0x00013C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InHeal' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_InCounter) == 0x00013D, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_InCounter' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_dataObjectBattleDamageSource) == 0x000140, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_dataObjectBattleDamageSource' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_useAbilityUCPC) == 0x000160, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_useAbilityUCPC' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_dataObjectBattleAbility) == 0x000168, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_dataObjectBattleAbility' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_GetCharacter_ReturnValue_2) == 0x000188, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_GetCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_IsAIPC_ReturnValue) == 0x000190, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_IsAIPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_GetActorDistance_ReturnValue) == 0x000194, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_GetActorDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_CallType) == 0x000198, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_CallType' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_Less_FloatFloat_ReturnValue) == 0x000199, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_BooleanAND_ReturnValue_6) == 0x00019A, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, K2Node_Event_TopPriorityActionId) == 0x00019C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::K2Node_Event_TopPriorityActionId' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_RequestActionTopPriority_ReturnValue) == 0x0001A4, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_RequestActionTopPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x0001A5, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");

// Function EN2000_05_GuardHound_KalmFangEnd2_AIBP.EN2000_05_GuardHound_KalmFangEnd2_AIBP_C.OnActionTopPriorityInvoke
// 0x0008 (0x0008 - 0x0000)
struct EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionTopPriorityInvoke final
{
public:
	class FName                                   TopPriorityActionId;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionTopPriorityInvoke) == 0x000004, "Wrong alignment on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionTopPriorityInvoke");
static_assert(sizeof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionTopPriorityInvoke) == 0x000008, "Wrong size on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionTopPriorityInvoke");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionTopPriorityInvoke, TopPriorityActionId) == 0x000000, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionTopPriorityInvoke::TopPriorityActionId' has a wrong offset!");

// Function EN2000_05_GuardHound_KalmFangEnd2_AIBP.EN2000_05_GuardHound_KalmFangEnd2_AIBP_C.OnProwlInvoke
// 0x0001 (0x0001 - 0x0000)
struct EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnProwlInvoke final
{
public:
	EEndAIProwlCallType                           CallType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnProwlInvoke) == 0x000001, "Wrong alignment on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnProwlInvoke");
static_assert(sizeof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnProwlInvoke) == 0x000001, "Wrong size on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnProwlInvoke");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnProwlInvoke, CallType) == 0x000000, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnProwlInvoke::CallType' has a wrong offset!");

// Function EN2000_05_GuardHound_KalmFangEnd2_AIBP.EN2000_05_GuardHound_KalmFangEnd2_AIBP_C.OnTakeDamageInvoke
// 0x0090 (0x0090 - 0x0000)
struct EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          InChara;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAbilityCommandType                  InCommandType;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InBind;                                            // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InGuard;                                           // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InBoneName;                                        // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAttributeWeak;                                   // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InDmgSrcID;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttributeType                       appendAttribute;                                   // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         justHitRotYaw;                                     // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                hitPosition;                                       // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InHeal;                                            // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InCounter;                                         // 0x0045(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataObjectBattleDamageSourceAccessor dataObjectBattleDamageSource;                      // 0x0048(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          useAbilityUCPC;                                    // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataObjectBattleAbilityAccessor    dataObjectBattleAbility;                           // 0x0070(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke) == 0x000008, "Wrong alignment on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke");
static_assert(sizeof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke) == 0x000090, "Wrong size on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, Damage) == 0x000000, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::Damage' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InChara) == 0x000008, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InChara' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InName) == 0x000010, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InName' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InCommandType) == 0x000018, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InCommandType' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InBind) == 0x000019, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InBind' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InGuard) == 0x00001A, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InGuard' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InBoneName) == 0x00001C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InBoneName' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InAttributeWeak) == 0x000024, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InAttributeWeak' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InDmgSrcID) == 0x000028, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InDmgSrcID' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, appendAttribute) == 0x000030, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::appendAttribute' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, justHitRotYaw) == 0x000034, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::justHitRotYaw' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, hitPosition) == 0x000038, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::hitPosition' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InHeal) == 0x000044, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InHeal' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, InCounter) == 0x000045, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::InCounter' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, dataObjectBattleDamageSource) == 0x000048, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::dataObjectBattleDamageSource' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, useAbilityUCPC) == 0x000068, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::useAbilityUCPC' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke, dataObjectBattleAbility) == 0x000070, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnTakeDamageInvoke::dataObjectBattleAbility' has a wrong offset!");

// Function EN2000_05_GuardHound_KalmFangEnd2_AIBP.EN2000_05_GuardHound_KalmFangEnd2_AIBP_C.OnActionInvoke
// 0x000C (0x000C - 0x0000)
struct EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionInvoke final
{
public:
	EEndAIIntervalType                            IntervalType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ExtraIntervalId;                                   // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionInvoke) == 0x000004, "Wrong alignment on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionInvoke");
static_assert(sizeof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionInvoke) == 0x00000C, "Wrong size on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionInvoke");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionInvoke, IntervalType) == 0x000000, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionInvoke::IntervalType' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionInvoke, ExtraIntervalId) == 0x000004, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnActionInvoke::ExtraIntervalId' has a wrong offset!");

// Function EN2000_05_GuardHound_KalmFangEnd2_AIBP.EN2000_05_GuardHound_KalmFangEnd2_AIBP_C.OnReactionSensingInvoke
// 0x0010 (0x0010 - 0x0000)
struct EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke final
{
public:
	class AEndCharacter*                          CauserChara;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HandleId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleReactionNotificationType            NotificationType;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttackDirectionType                 AttackDirectionType;                               // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke) == 0x000008, "Wrong alignment on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke");
static_assert(sizeof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke) == 0x000010, "Wrong size on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke, CauserChara) == 0x000000, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke::CauserChara' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke, HandleId) == 0x000008, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke::HandleId' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke, NotificationType) == 0x00000C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke::NotificationType' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke, AttackDirectionType) == 0x00000D, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnReactionSensingInvoke::AttackDirectionType' has a wrong offset!");

// Function EN2000_05_GuardHound_KalmFangEnd2_AIBP.EN2000_05_GuardHound_KalmFangEnd2_AIBP_C.OnMotionMessageInvoke
// 0x0018 (0x0018 - 0x0000)
struct EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke final
{
public:
	class FName                                   InMotionName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIntValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFloatValue;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke) == 0x000004, "Wrong alignment on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke");
static_assert(sizeof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke) == 0x000018, "Wrong size on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke, InMotionName) == 0x000000, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke::InMotionName' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke, InName) == 0x000008, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke::InName' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke, InIntValue) == 0x000010, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke::InIntValue' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke, InFloatValue) == 0x000014, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnMotionMessageInvoke::InFloatValue' has a wrong offset!");

// Function EN2000_05_GuardHound_KalmFangEnd2_AIBP.EN2000_05_GuardHound_KalmFangEnd2_AIBP_C.OnGiveDamageInvoke
// 0x0038 (0x0038 - 0x0000)
struct EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          InTarget;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InBind;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InGuard;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          KeepOver;                                          // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InCounter;                                         // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   InBoneName;                                        // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAttributeWeak;                                   // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InDamageSourceID;                                  // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InSteal;                                           // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          heal;                                              // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          kill;                                              // 0x0032(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          justGuard;                                         // 0x0033(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLock;                                             // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke) == 0x000008, "Wrong alignment on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke");
static_assert(sizeof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke) == 0x000038, "Wrong size on EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, Damage) == 0x000000, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::Damage' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, InTarget) == 0x000008, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::InTarget' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, InName) == 0x000010, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::InName' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, InBind) == 0x000018, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::InBind' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, InGuard) == 0x000019, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::InGuard' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, KeepOver) == 0x00001A, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::KeepOver' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, InCounter) == 0x00001B, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::InCounter' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, InBoneName) == 0x00001C, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::InBoneName' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, InAttributeWeak) == 0x000024, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::InAttributeWeak' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, InDamageSourceID) == 0x000028, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::InDamageSourceID' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, InSteal) == 0x000030, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::InSteal' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, heal) == 0x000031, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::heal' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, kill) == 0x000032, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::kill' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, justGuard) == 0x000033, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::justGuard' has a wrong offset!");
static_assert(offsetof(EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke, bLock) == 0x000034, "Member 'EN2000_05_GuardHound_KalmFangEnd2_AIBP_C_OnGiveDamageInvoke::bLock' has a wrong offset!");

}

