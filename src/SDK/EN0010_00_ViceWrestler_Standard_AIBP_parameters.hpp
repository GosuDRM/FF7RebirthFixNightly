#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EN0010_00_ViceWrestler_Standard_AIBP

#include "Basic.hpp"

#include "EndGame_structs.hpp"


namespace SDK::Params
{

// Function EN0010_00_ViceWrestler_Standard_AIBP.EN0010_00_ViceWrestler_Standard_AIBP_C.ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP
// 0x0170 (0x0170 - 0x0000)
struct EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestAction_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_instant;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          K2Node_Event_causerCharacter;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_LockTargetTag;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndCharacter*                          CallFunc_GetPartyLeader_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InMotionName_2;                       // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_2;                             // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIntValue_2;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InFloatValue_2;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InTotalDuration;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InMotionName_1;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_1;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIntValue_1;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InFloatValue_1;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UEndAIActionPackBase>> K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	struct FEndAIActionPackReturnInfo             CallFunc_RequestActionPackArray_ReturnValue;       // 0x0080(0x0014)(NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UEndAIActionPackBase>> K2Node_MakeArray_Array_1;                          // 0x0098(0x0010)(ReferenceParm)
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue_1;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEndAIActionPackReturnInfo             CallFunc_RequestActionPackArray_ReturnValue_1;     // 0x00B0(0x0014)(NoDestructor)
	float                                         CallFunc_NavmeshRaycastFromChara_OutDistance;      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NavmeshRaycastFromChara_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetTargetCharacter_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetCharacterAngle_ReturnValue;      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAIBranch2                                 CallFunc_RatioBranch2_OutSignal;                   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF[0x1];                                       // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndAIActionPackReturnInfo             CallFunc_RequestActionPack_ReturnValue;            // 0x00E0(0x0014)(NoDestructor)
	class FName                                   K2Node_Event_InMotionName;                         // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName;                               // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIntValue;                           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InFloatValue;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue_2;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AEndCharacter*>                  CallFunc_GetPartyMembersIgnoreDead_ReturnValue;    // 0x0118(0x0010)(ReferenceParm)
	TArray<class AEndCharacter*>                  CallFunc_GetReserveMembers_ReturnValue;            // 0x0128(0x0010)(ReferenceParm)
	struct FEndAIActionPackReturnInfo             CallFunc_RequestActionPack_ReturnValue_1;          // 0x0138(0x0014)(NoDestructor)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetNearestActor_outActor;                 // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestAction_ReturnValue_1;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorDistance_ReturnValue;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAIProwlCallType                           K2Node_Event_CallType;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndAIIntervalType                            K2Node_Event_IntervalType;                         // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ExtraIntervalId;                      // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestAction_ReturnValue_2;              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP) == 0x000008, "Wrong alignment on EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP");
static_assert(sizeof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP) == 0x000170, "Wrong size on EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, EntryPoint) == 0x000000, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_RequestAction_ReturnValue) == 0x000004, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_RequestAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetCharacter_ReturnValue) == 0x000008, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_instant) == 0x000010, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_instant' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_causerCharacter) == 0x000018, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_causerCharacter' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_LockTargetTag) == 0x000020, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_LockTargetTag' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetPartyLeader_ReturnValue) == 0x000028, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetPartyLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_SwitchName_CmpSuccess) == 0x000030, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InMotionName_2) == 0x000034, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InMotionName_2' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InName_2) == 0x00003C, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InName_2' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InIntValue_2) == 0x000044, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InIntValue_2' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InFloatValue_2) == 0x000048, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InFloatValue_2' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InTotalDuration) == 0x00004C, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InTotalDuration' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InMotionName_1) == 0x000050, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InMotionName_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InName_1) == 0x000058, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InName_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InIntValue_1) == 0x000060, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InIntValue_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InFloatValue_1) == 0x000064, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InFloatValue_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_SwitchName_CmpSuccess_1) == 0x000068, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_SwitchName_CmpSuccess_2) == 0x000069, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_MakeArray_Array) == 0x000070, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_RequestActionPackArray_ReturnValue) == 0x000080, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_RequestActionPackArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_MakeArray_Array_1) == 0x000098, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetCharacter_ReturnValue_1) == 0x0000A8, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_RequestActionPackArray_ReturnValue_1) == 0x0000B0, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_RequestActionPackArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_NavmeshRaycastFromChara_OutDistance) == 0x0000C4, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_NavmeshRaycastFromChara_OutDistance' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_NavmeshRaycastFromChara_ReturnValue) == 0x0000C8, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_NavmeshRaycastFromChara_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetTargetCharacter_ReturnValue) == 0x0000D0, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetTargetCharacterAngle_ReturnValue) == 0x0000D8, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetTargetCharacterAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_RatioBranch2_OutSignal) == 0x0000DC, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_RatioBranch2_OutSignal' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0000DD, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_SwitchEnum_CmpSuccess) == 0x0000DE, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_RequestActionPack_ReturnValue) == 0x0000E0, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_RequestActionPack_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InMotionName) == 0x0000F4, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InMotionName' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InName) == 0x0000FC, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InIntValue) == 0x000104, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InIntValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_InFloatValue) == 0x000108, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_InFloatValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, Temp_bool_Variable) == 0x00010C, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_Not_PreBool_ReturnValue) == 0x00010D, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetCharacter_ReturnValue_2) == 0x000110, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetPartyMembersIgnoreDead_ReturnValue) == 0x000118, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetPartyMembersIgnoreDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetReserveMembers_ReturnValue) == 0x000128, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetReserveMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_RequestActionPack_ReturnValue_1) == 0x000138, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_RequestActionPack_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetNearestActor_outActor) == 0x000150, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetNearestActor_outActor' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_RequestAction_ReturnValue_1) == 0x000158, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_RequestAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GetActorDistance_ReturnValue) == 0x00015C, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GetActorDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_CallType) == 0x000160, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_CallType' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000161, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_SwitchEnum_CmpSuccess_1) == 0x000162, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_IntervalType) == 0x000163, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_IntervalType' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_Event_ExtraIntervalId) == 0x000164, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_Event_ExtraIntervalId' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, CallFunc_RequestAction_ReturnValue_2) == 0x00016C, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::CallFunc_RequestAction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP, K2Node_SwitchEnum_CmpSuccess_2) == 0x00016D, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_ExecuteUbergraph_EN0010_00_ViceWrestler_Standard_AIBP::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function EN0010_00_ViceWrestler_Standard_AIBP.EN0010_00_ViceWrestler_Standard_AIBP_C.OnMotionMessageInvoke
// 0x0018 (0x0018 - 0x0000)
struct EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke final
{
public:
	class FName                                   InMotionName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIntValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFloatValue;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke) == 0x000004, "Wrong alignment on EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke");
static_assert(sizeof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke) == 0x000018, "Wrong size on EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke, InMotionName) == 0x000000, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke::InMotionName' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke, InName) == 0x000008, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke::InName' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke, InIntValue) == 0x000010, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke::InIntValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke, InFloatValue) == 0x000014, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionMessageInvoke::InFloatValue' has a wrong offset!");

// Function EN0010_00_ViceWrestler_Standard_AIBP.EN0010_00_ViceWrestler_Standard_AIBP_C.OnMotionStateMessageEnd
// 0x0018 (0x0018 - 0x0000)
struct EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd final
{
public:
	class FName                                   InMotionName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIntValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFloatValue;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd) == 0x000004, "Wrong alignment on EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd");
static_assert(sizeof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd) == 0x000018, "Wrong size on EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd, InMotionName) == 0x000000, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd::InMotionName' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd, InName) == 0x000008, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd::InName' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd, InIntValue) == 0x000010, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd::InIntValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd, InFloatValue) == 0x000014, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageEnd::InFloatValue' has a wrong offset!");

// Function EN0010_00_ViceWrestler_Standard_AIBP.EN0010_00_ViceWrestler_Standard_AIBP_C.OnMotionStateMessageBegin
// 0x001C (0x001C - 0x0000)
struct EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin final
{
public:
	class FName                                   InMotionName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIntValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFloatValue;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InTotalDuration;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin) == 0x000004, "Wrong alignment on EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin");
static_assert(sizeof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin) == 0x00001C, "Wrong size on EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin, InMotionName) == 0x000000, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin::InMotionName' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin, InName) == 0x000008, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin::InName' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin, InIntValue) == 0x000010, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin::InIntValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin, InFloatValue) == 0x000014, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin::InFloatValue' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin, InTotalDuration) == 0x000018, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnMotionStateMessageBegin::InTotalDuration' has a wrong offset!");

// Function EN0010_00_ViceWrestler_Standard_AIBP.EN0010_00_ViceWrestler_Standard_AIBP_C.OnDefinitionLockTargetInvoke
// 0x0008 (0x0008 - 0x0000)
struct EN0010_00_ViceWrestler_Standard_AIBP_C_OnDefinitionLockTargetInvoke final
{
public:
	class FName                                   LockTargetTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnDefinitionLockTargetInvoke) == 0x000004, "Wrong alignment on EN0010_00_ViceWrestler_Standard_AIBP_C_OnDefinitionLockTargetInvoke");
static_assert(sizeof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnDefinitionLockTargetInvoke) == 0x000008, "Wrong size on EN0010_00_ViceWrestler_Standard_AIBP_C_OnDefinitionLockTargetInvoke");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnDefinitionLockTargetInvoke, LockTargetTag) == 0x000000, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnDefinitionLockTargetInvoke::LockTargetTag' has a wrong offset!");

// Function EN0010_00_ViceWrestler_Standard_AIBP.EN0010_00_ViceWrestler_Standard_AIBP_C.OnBeginBreak
// 0x0008 (0x0008 - 0x0000)
struct EN0010_00_ViceWrestler_Standard_AIBP_C_OnBeginBreak final
{
public:
	class AEndCharacter*                          causerCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnBeginBreak) == 0x000008, "Wrong alignment on EN0010_00_ViceWrestler_Standard_AIBP_C_OnBeginBreak");
static_assert(sizeof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnBeginBreak) == 0x000008, "Wrong size on EN0010_00_ViceWrestler_Standard_AIBP_C_OnBeginBreak");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnBeginBreak, causerCharacter) == 0x000000, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnBeginBreak::causerCharacter' has a wrong offset!");

// Function EN0010_00_ViceWrestler_Standard_AIBP.EN0010_00_ViceWrestler_Standard_AIBP_C.OnEndBurst
// 0x0001 (0x0001 - 0x0000)
struct EN0010_00_ViceWrestler_Standard_AIBP_C_OnEndBurst final
{
public:
	bool                                          instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnEndBurst) == 0x000001, "Wrong alignment on EN0010_00_ViceWrestler_Standard_AIBP_C_OnEndBurst");
static_assert(sizeof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnEndBurst) == 0x000001, "Wrong size on EN0010_00_ViceWrestler_Standard_AIBP_C_OnEndBurst");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnEndBurst, instant) == 0x000000, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnEndBurst::instant' has a wrong offset!");

// Function EN0010_00_ViceWrestler_Standard_AIBP.EN0010_00_ViceWrestler_Standard_AIBP_C.OnProwlInvoke
// 0x0001 (0x0001 - 0x0000)
struct EN0010_00_ViceWrestler_Standard_AIBP_C_OnProwlInvoke final
{
public:
	EEndAIProwlCallType                           CallType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnProwlInvoke) == 0x000001, "Wrong alignment on EN0010_00_ViceWrestler_Standard_AIBP_C_OnProwlInvoke");
static_assert(sizeof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnProwlInvoke) == 0x000001, "Wrong size on EN0010_00_ViceWrestler_Standard_AIBP_C_OnProwlInvoke");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnProwlInvoke, CallType) == 0x000000, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnProwlInvoke::CallType' has a wrong offset!");

// Function EN0010_00_ViceWrestler_Standard_AIBP.EN0010_00_ViceWrestler_Standard_AIBP_C.OnActionInvoke
// 0x000C (0x000C - 0x0000)
struct EN0010_00_ViceWrestler_Standard_AIBP_C_OnActionInvoke final
{
public:
	EEndAIIntervalType                            IntervalType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ExtraIntervalId;                                   // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnActionInvoke) == 0x000004, "Wrong alignment on EN0010_00_ViceWrestler_Standard_AIBP_C_OnActionInvoke");
static_assert(sizeof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnActionInvoke) == 0x00000C, "Wrong size on EN0010_00_ViceWrestler_Standard_AIBP_C_OnActionInvoke");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnActionInvoke, IntervalType) == 0x000000, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnActionInvoke::IntervalType' has a wrong offset!");
static_assert(offsetof(EN0010_00_ViceWrestler_Standard_AIBP_C_OnActionInvoke, ExtraIntervalId) == 0x000004, "Member 'EN0010_00_ViceWrestler_Standard_AIBP_C_OnActionInvoke::ExtraIntervalId' has a wrong offset!");

}

