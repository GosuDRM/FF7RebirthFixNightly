#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VR_Chara

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass VR_Chara.VR_Chara_C
// 0x00A8 (0x0470 - 0x03C8)
class UVR_Chara_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Party2Color;                                       // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Party1Color;                                       // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Seleted;                                           // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Empty;                                             // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Six_PersonCourse;                                  // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Three_PersonCourse;                                // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnderShinraMansion;                                // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnderColiseumForQuest;                             // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnderColiseum;                                     // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GoldSaucerArena;                                   // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VR;                                                // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base2;                                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVR_CharaNum_C*                         CharaNum;                                          // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              GS_Deco;                                           // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBillboard*                          Img_Player;                                        // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerLevel_C*                         PlayerLevel;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Name;                                          // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              US_Deco;                                           // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              VR_Deco;                                           // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              VR_Deco2;                                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VR_Chara_C">();
	}
	static class UVR_Chara_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVR_Chara_C>();
	}
};
static_assert(alignof(UVR_Chara_C) == 0x000008, "Wrong alignment on UVR_Chara_C");
static_assert(sizeof(UVR_Chara_C) == 0x000470, "Wrong size on UVR_Chara_C");
static_assert(offsetof(UVR_Chara_C, Party2Color) == 0x0003C8, "Member 'UVR_Chara_C::Party2Color' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, Party1Color) == 0x0003D0, "Member 'UVR_Chara_C::Party1Color' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, Seleted) == 0x0003D8, "Member 'UVR_Chara_C::Seleted' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, Empty) == 0x0003E0, "Member 'UVR_Chara_C::Empty' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, Six_PersonCourse) == 0x0003E8, "Member 'UVR_Chara_C::Six_PersonCourse' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, Three_PersonCourse) == 0x0003F0, "Member 'UVR_Chara_C::Three_PersonCourse' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, UnderShinraMansion) == 0x0003F8, "Member 'UVR_Chara_C::UnderShinraMansion' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, UnderColiseumForQuest) == 0x000400, "Member 'UVR_Chara_C::UnderColiseumForQuest' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, UnderColiseum) == 0x000408, "Member 'UVR_Chara_C::UnderColiseum' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, GoldSaucerArena) == 0x000410, "Member 'UVR_Chara_C::GoldSaucerArena' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, VR) == 0x000418, "Member 'UVR_Chara_C::VR' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, Base) == 0x000420, "Member 'UVR_Chara_C::Base' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, Base2) == 0x000428, "Member 'UVR_Chara_C::Base2' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, CharaNum) == 0x000430, "Member 'UVR_Chara_C::CharaNum' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, GS_Deco) == 0x000438, "Member 'UVR_Chara_C::GS_Deco' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, Img_Player) == 0x000440, "Member 'UVR_Chara_C::Img_Player' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, PlayerLevel) == 0x000448, "Member 'UVR_Chara_C::PlayerLevel' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, Txt_Name) == 0x000450, "Member 'UVR_Chara_C::Txt_Name' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, US_Deco) == 0x000458, "Member 'UVR_Chara_C::US_Deco' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, VR_Deco) == 0x000460, "Member 'UVR_Chara_C::VR_Deco' has a wrong offset!");
static_assert(offsetof(UVR_Chara_C, VR_Deco2) == 0x000468, "Member 'UVR_Chara_C::VR_Deco2' has a wrong offset!");

}

