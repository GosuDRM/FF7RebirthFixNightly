#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EN0008_04_Vice_UniqueStandard_AIBP

#include "Basic.hpp"

#include "EndGame_structs.hpp"
#include "EndDataObject_structs.hpp"
#include "EndDataBase_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EN0008_04_Vice_UniqueStandard_AIBP.EN0008_04_Vice_UniqueStandard_AIBP_C.ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP
// 0x0198 (0x0198 - 0x0000)
struct EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAIProwlCallType                           K2Node_Event_CallType;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAIIntervalType                            K2Node_Event_IntervalType;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ExtraIntervalId;                      // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndAIBranch2                                 CallFunc_RatioBranch2_OutSignal;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestAction_ReturnValue;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestAction_ReturnValue_1;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndAIActionPackReturnInfo             CallFunc_RequestActionPack_ReturnValue;            // 0x0028(0x0014)(NoDestructor)
	EEndAIBranch2                                 CallFunc_RatioBranch2_OutSignal_1;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestAction_ReturnValue_2;              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestAction_ReturnValue_3;              // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetEnemyMemberCount_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndAIBattleGroupNotifyInfo            K2Node_Event_NotifyInfo;                           // 0x0058(0x0020)(NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue_1;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDamageSource_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEnemyMemberCount_ReturnValue_1;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_AtBurst;                              // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F[0x1];                                       // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue_2;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDamageSource_ReturnValue_1;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InMotionName_1;                       // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_2;                             // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIntValue_1;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InFloatValue_1;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InTotalDuration;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InMotionName;                         // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName_1;                             // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIntValue;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InFloatValue;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Damage;                               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          K2Node_Event_InChara;                              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName;                               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAbilityCommandType                  K2Node_Event_InCommandType;                        // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InBind;                               // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InGuard;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x1];                                      // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InBoneName;                           // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InAttributeWeak;                      // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InDmgSrcID;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttributeType                       K2Node_Event_appendAttribute;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_JustHitRotYaw;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitPosition;                          // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InHeal;                               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InCounter;                            // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataObjectBattleDamageSourceAccessor K2Node_Event_dataObjectBattleDamageSource;         // 0x0138(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_Event_useAbilityUCPC;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataObjectBattleAbilityAccessor    K2Node_Event_dataObjectBattleAbility;              // 0x0160(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue_3;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartBurst_ReturnValue;                   // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP) == 0x000008, "Wrong alignment on EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP");
static_assert(sizeof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP) == 0x000198, "Wrong size on EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, EntryPoint) == 0x000000, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_GetCharacter_ReturnValue) == 0x000008, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_CallType) == 0x000010, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_CallType' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_IntervalType) == 0x000011, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_IntervalType' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_ExtraIntervalId) == 0x000014, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_ExtraIntervalId' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, Temp_int_Variable) == 0x00001C, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_RatioBranch2_OutSignal) == 0x000021, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_RatioBranch2_OutSignal' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_SwitchEnum_CmpSuccess_1) == 0x000022, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_RequestAction_ReturnValue) == 0x000023, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_RequestAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_RequestAction_ReturnValue_1) == 0x000024, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_RequestAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_RequestActionPack_ReturnValue) == 0x000028, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_RequestActionPack_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_RatioBranch2_OutSignal_1) == 0x00003C, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_RatioBranch2_OutSignal_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_RequestAction_ReturnValue_2) == 0x00003D, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_RequestAction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_SwitchEnum_CmpSuccess_2) == 0x00003E, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_RequestAction_ReturnValue_3) == 0x00003F, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_RequestAction_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_GetEnemyMemberCount_ReturnValue) == 0x000040, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_GetEnemyMemberCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, Temp_int_Variable_1) == 0x000048, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_NotifyInfo) == 0x000058, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_NotifyInfo' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_SwitchName_CmpSuccess) == 0x000078, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000084, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000085, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_BooleanOR_ReturnValue_1) == 0x000086, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_GetCharacter_ReturnValue_1) == 0x000088, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_GetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_HasDamageSource_ReturnValue) == 0x000090, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_HasDamageSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_GetEnemyMemberCount_ReturnValue_1) == 0x000094, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_GetEnemyMemberCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000098, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00009C, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_BooleanOR_ReturnValue_2) == 0x00009D, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_AtBurst) == 0x00009E, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_AtBurst' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_GetCharacter_ReturnValue_2) == 0x0000A0, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_GetCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_HasDamageSource_ReturnValue_1) == 0x0000A8, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_HasDamageSource_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, Temp_int_Variable_2) == 0x0000AC, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, Temp_int_Variable_3) == 0x0000B0, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InMotionName_1) == 0x0000B4, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InMotionName_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InName_2) == 0x0000BC, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InName_2' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InIntValue_1) == 0x0000C4, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InIntValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InFloatValue_1) == 0x0000C8, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InFloatValue_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InTotalDuration) == 0x0000CC, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InTotalDuration' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_SwitchName_CmpSuccess_1) == 0x0000D0, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InMotionName) == 0x0000D4, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InMotionName' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InName_1) == 0x0000DC, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InName_1' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InIntValue) == 0x0000E4, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InIntValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InFloatValue) == 0x0000E8, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InFloatValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_SwitchName_CmpSuccess_2) == 0x0000EC, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_Damage) == 0x0000F0, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InChara) == 0x0000F8, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InChara' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InName) == 0x000100, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InCommandType) == 0x000108, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InCommandType' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InBind) == 0x000109, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InBind' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InGuard) == 0x00010A, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InGuard' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InBoneName) == 0x00010C, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InBoneName' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InAttributeWeak) == 0x000114, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InAttributeWeak' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InDmgSrcID) == 0x000118, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InDmgSrcID' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_appendAttribute) == 0x000120, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_appendAttribute' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_JustHitRotYaw) == 0x000124, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_JustHitRotYaw' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_HitPosition) == 0x000128, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_HitPosition' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InHeal) == 0x000134, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InHeal' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_InCounter) == 0x000135, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_InCounter' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_dataObjectBattleDamageSource) == 0x000138, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_dataObjectBattleDamageSource' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_useAbilityUCPC) == 0x000158, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_useAbilityUCPC' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, K2Node_Event_dataObjectBattleAbility) == 0x000160, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::K2Node_Event_dataObjectBattleAbility' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000180, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_GetCharacter_ReturnValue_3) == 0x000188, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_GetCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_BooleanAND_ReturnValue) == 0x000190, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP, CallFunc_StartBurst_ReturnValue) == 0x000191, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_ExecuteUbergraph_EN0008_04_Vice_UniqueStandard_AIBP::CallFunc_StartBurst_ReturnValue' has a wrong offset!");

// Function EN0008_04_Vice_UniqueStandard_AIBP.EN0008_04_Vice_UniqueStandard_AIBP_C.OnTakeDamageInvoke
// 0x0090 (0x0090 - 0x0000)
struct EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          InChara;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAbilityCommandType                  InCommandType;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InBind;                                            // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InGuard;                                           // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InBoneName;                                        // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAttributeWeak;                                   // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InDmgSrcID;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttributeType                       appendAttribute;                                   // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         justHitRotYaw;                                     // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                hitPosition;                                       // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InHeal;                                            // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InCounter;                                         // 0x0045(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataObjectBattleDamageSourceAccessor dataObjectBattleDamageSource;                      // 0x0048(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          useAbilityUCPC;                                    // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataObjectBattleAbilityAccessor    dataObjectBattleAbility;                           // 0x0070(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke) == 0x000008, "Wrong alignment on EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke");
static_assert(sizeof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke) == 0x000090, "Wrong size on EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, Damage) == 0x000000, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::Damage' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InChara) == 0x000008, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InChara' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InName) == 0x000010, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InName' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InCommandType) == 0x000018, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InCommandType' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InBind) == 0x000019, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InBind' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InGuard) == 0x00001A, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InGuard' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InBoneName) == 0x00001C, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InBoneName' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InAttributeWeak) == 0x000024, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InAttributeWeak' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InDmgSrcID) == 0x000028, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InDmgSrcID' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, appendAttribute) == 0x000030, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::appendAttribute' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, justHitRotYaw) == 0x000034, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::justHitRotYaw' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, hitPosition) == 0x000038, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::hitPosition' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InHeal) == 0x000044, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InHeal' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, InCounter) == 0x000045, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::InCounter' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, dataObjectBattleDamageSource) == 0x000048, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::dataObjectBattleDamageSource' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, useAbilityUCPC) == 0x000068, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::useAbilityUCPC' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke, dataObjectBattleAbility) == 0x000070, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnTakeDamageInvoke::dataObjectBattleAbility' has a wrong offset!");

// Function EN0008_04_Vice_UniqueStandard_AIBP.EN0008_04_Vice_UniqueStandard_AIBP_C.OnMotionStateMessageEnd
// 0x0018 (0x0018 - 0x0000)
struct EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd final
{
public:
	class FName                                   InMotionName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIntValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFloatValue;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd) == 0x000004, "Wrong alignment on EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd");
static_assert(sizeof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd) == 0x000018, "Wrong size on EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd, InMotionName) == 0x000000, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd::InMotionName' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd, InName) == 0x000008, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd::InName' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd, InIntValue) == 0x000010, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd::InIntValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd, InFloatValue) == 0x000014, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageEnd::InFloatValue' has a wrong offset!");

// Function EN0008_04_Vice_UniqueStandard_AIBP.EN0008_04_Vice_UniqueStandard_AIBP_C.OnMotionStateMessageBegin
// 0x001C (0x001C - 0x0000)
struct EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin final
{
public:
	class FName                                   InMotionName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIntValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFloatValue;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InTotalDuration;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin) == 0x000004, "Wrong alignment on EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin");
static_assert(sizeof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin) == 0x00001C, "Wrong size on EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin, InMotionName) == 0x000000, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin::InMotionName' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin, InName) == 0x000008, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin::InName' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin, InIntValue) == 0x000010, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin::InIntValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin, InFloatValue) == 0x000014, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin::InFloatValue' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin, InTotalDuration) == 0x000018, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnMotionStateMessageBegin::InTotalDuration' has a wrong offset!");

// Function EN0008_04_Vice_UniqueStandard_AIBP.EN0008_04_Vice_UniqueStandard_AIBP_C.OnDead
// 0x0001 (0x0001 - 0x0000)
struct EN0008_04_Vice_UniqueStandard_AIBP_C_OnDead final
{
public:
	bool                                          AtBurst;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnDead) == 0x000001, "Wrong alignment on EN0008_04_Vice_UniqueStandard_AIBP_C_OnDead");
static_assert(sizeof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnDead) == 0x000001, "Wrong size on EN0008_04_Vice_UniqueStandard_AIBP_C_OnDead");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnDead, AtBurst) == 0x000000, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnDead::AtBurst' has a wrong offset!");

// Function EN0008_04_Vice_UniqueStandard_AIBP.EN0008_04_Vice_UniqueStandard_AIBP_C.OnGroupMessageInvoke
// 0x0020 (0x0020 - 0x0000)
struct EN0008_04_Vice_UniqueStandard_AIBP_C_OnGroupMessageInvoke final
{
public:
	struct FEndAIBattleGroupNotifyInfo            NotifyInfo;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnGroupMessageInvoke) == 0x000008, "Wrong alignment on EN0008_04_Vice_UniqueStandard_AIBP_C_OnGroupMessageInvoke");
static_assert(sizeof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnGroupMessageInvoke) == 0x000020, "Wrong size on EN0008_04_Vice_UniqueStandard_AIBP_C_OnGroupMessageInvoke");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnGroupMessageInvoke, NotifyInfo) == 0x000000, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnGroupMessageInvoke::NotifyInfo' has a wrong offset!");

// Function EN0008_04_Vice_UniqueStandard_AIBP.EN0008_04_Vice_UniqueStandard_AIBP_C.OnActionInvoke
// 0x000C (0x000C - 0x0000)
struct EN0008_04_Vice_UniqueStandard_AIBP_C_OnActionInvoke final
{
public:
	EEndAIIntervalType                            IntervalType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ExtraIntervalId;                                   // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnActionInvoke) == 0x000004, "Wrong alignment on EN0008_04_Vice_UniqueStandard_AIBP_C_OnActionInvoke");
static_assert(sizeof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnActionInvoke) == 0x00000C, "Wrong size on EN0008_04_Vice_UniqueStandard_AIBP_C_OnActionInvoke");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnActionInvoke, IntervalType) == 0x000000, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnActionInvoke::IntervalType' has a wrong offset!");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnActionInvoke, ExtraIntervalId) == 0x000004, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnActionInvoke::ExtraIntervalId' has a wrong offset!");

// Function EN0008_04_Vice_UniqueStandard_AIBP.EN0008_04_Vice_UniqueStandard_AIBP_C.OnProwlInvoke
// 0x0001 (0x0001 - 0x0000)
struct EN0008_04_Vice_UniqueStandard_AIBP_C_OnProwlInvoke final
{
public:
	EEndAIProwlCallType                           CallType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnProwlInvoke) == 0x000001, "Wrong alignment on EN0008_04_Vice_UniqueStandard_AIBP_C_OnProwlInvoke");
static_assert(sizeof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnProwlInvoke) == 0x000001, "Wrong size on EN0008_04_Vice_UniqueStandard_AIBP_C_OnProwlInvoke");
static_assert(offsetof(EN0008_04_Vice_UniqueStandard_AIBP_C_OnProwlInvoke, CallType) == 0x000000, "Member 'EN0008_04_Vice_UniqueStandard_AIBP_C_OnProwlInvoke::CallType' has a wrong offset!");

}

