#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EN2000_05_GuardHound_KalmFangEnd2_AIBP

#include "Basic.hpp"

#include "EndDataBase_structs.hpp"
#include "Engine_structs.hpp"
#include "EN_Base_AIBP_classes.hpp"
#include "EndGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass EN2000_05_GuardHound_KalmFangEnd2_AIBP.EN2000_05_GuardHound_KalmFangEnd2_AIBP_C
// 0x0010 (0x0FB0 - 0x0FA0)
class AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C final : public AEN_Base_AIBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_EN2000_05_GuardHound_KalmFangEnd2_AIBP_C; // 0x0F98(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	bool                                          HasToLeave;                                        // 0x0FA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_EN2000_05_GuardHound_KalmFangEnd2_AIBP(int32 EntryPoint);
	void OnActionTopPriorityInvoke(class FName TopPriorityActionId);
	void AsyncCheckConditionInvoke();
	void OnProwlInvoke(EEndAIProwlCallType CallType);
	void OnTakeDamageInvoke(int32 Damage, class AEndCharacter* InChara, class FName InName, EEndBattleAbilityCommandType InCommandType, bool InBind, bool InGuard, class FName InBoneName, bool InAttributeWeak, class FName InDmgSrcID, EEndBattleAttributeType appendAttribute, float justHitRotYaw, const struct FVector& hitPosition, bool InHeal, bool InCounter, const struct FEndDataObjectBattleDamageSourceAccessor& dataObjectBattleDamageSource, bool useAbilityUCPC, const struct FEndDataObjectBattleAbilityAccessor& dataObjectBattleAbility);
	void OnActionInvoke(EEndAIIntervalType IntervalType, class FName ExtraIntervalId);
	void OnReactionSensingInvoke(class AEndCharacter* CauserChara, int32 HandleId, EEndBattleReactionNotificationType NotificationType, EEndBattleAttackDirectionType AttackDirectionType);
	void OnMotionMessageInvoke(class FName InMotionName, class FName InName, int32 InIntValue, float InFloatValue);
	void OnGiveDamageInvoke(int32 Damage, class AEndCharacter* InTarget, class FName InName, bool InBind, bool InGuard, bool KeepOver, bool InCounter, class FName InBoneName, bool InAttributeWeak, class FName InDamageSourceID, bool InSteal, bool heal, bool kill, bool justGuard, bool bLock);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EN2000_05_GuardHound_KalmFangEnd2_AIBP_C">();
	}
	static class AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C>();
	}
};
static_assert(alignof(AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C) == 0x000010, "Wrong alignment on AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C");
static_assert(sizeof(AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C) == 0x000FB0, "Wrong size on AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C");
static_assert(offsetof(AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C, UberGraphFrame_EN2000_05_GuardHound_KalmFangEnd2_AIBP_C) == 0x000F98, "Member 'AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C::UberGraphFrame_EN2000_05_GuardHound_KalmFangEnd2_AIBP_C' has a wrong offset!");
static_assert(offsetof(AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C, HasToLeave) == 0x000FA0, "Member 'AEN2000_05_GuardHound_KalmFangEnd2_AIBP_C::HasToLeave' has a wrong offset!");

}

