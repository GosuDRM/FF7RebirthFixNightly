#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VR_InfoWindow

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass VR_InfoWindow.VR_InfoWindow_C
// 0x0190 (0x0610 - 0x0480)
class UVR_InfoWindow_C final : public UEndColosseumInfoWindow
{
public:
	class UWidgetAnimation*                       Normal;                                            // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Lock;                                              // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnderShinraMansion;                                // 0x0490(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnderColiseumForQuest;                             // 0x0498(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnderColiseum;                                     // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GoldSaucerArena;                                   // 0x04A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VR;                                                // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChangeInfo;                                        // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage;                                          // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_1;                                        // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_2;                                        // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_3;                                        // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_4;                                        // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_61;                                       // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G2_Base1;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G2_Base1_1;                                        // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G2_Base1_2;                                        // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G2_Base1_3;                                        // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G2_Base1_4;                                        // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G2_Base1_5;                                        // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G3_Base1;                                          // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G4_Base;                                           // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G4_Base_1;                                         // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Item_C*                           Icon_Item;                                         // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Item_C*                           Icon_Item_G2;                                      // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_X_G1;                                         // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_X_G2;                                         // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Frog;                                          // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line1;                                             // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line1_1;                                           // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line2;                                             // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line3;                                             // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line4;                                             // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line5;                                             // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           ListBgSet;                                         // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           LogoSet;                                           // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              RankBase;                                          // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuest_RecommendLevel_C*                RecommendLevel;                                    // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Alarm;                                         // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_DifficultyTitle_1;                             // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Group2Title;                                   // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_ItemName_G2;                                   // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_ItemNum_G2;                                    // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Member4;                                       // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Member5;                                       // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Member6;                                       // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_PrizeTitle;                                    // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Rank;                                          // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Time2;                                         // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VR_InfoWindow_C">();
	}
	static class UVR_InfoWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVR_InfoWindow_C>();
	}
};
static_assert(alignof(UVR_InfoWindow_C) == 0x000008, "Wrong alignment on UVR_InfoWindow_C");
static_assert(sizeof(UVR_InfoWindow_C) == 0x000610, "Wrong size on UVR_InfoWindow_C");
static_assert(offsetof(UVR_InfoWindow_C, Normal) == 0x000480, "Member 'UVR_InfoWindow_C::Normal' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Lock) == 0x000488, "Member 'UVR_InfoWindow_C::Lock' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, UnderShinraMansion) == 0x000490, "Member 'UVR_InfoWindow_C::UnderShinraMansion' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, UnderColiseumForQuest) == 0x000498, "Member 'UVR_InfoWindow_C::UnderColiseumForQuest' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, UnderColiseum) == 0x0004A0, "Member 'UVR_InfoWindow_C::UnderColiseum' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, GoldSaucerArena) == 0x0004A8, "Member 'UVR_InfoWindow_C::GoldSaucerArena' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, VR) == 0x0004B0, "Member 'UVR_InfoWindow_C::VR' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, ChangeInfo) == 0x0004B8, "Member 'UVR_InfoWindow_C::ChangeInfo' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Base) == 0x0004C0, "Member 'UVR_InfoWindow_C::Base' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, EndImage) == 0x0004C8, "Member 'UVR_InfoWindow_C::EndImage' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, EndImage_1) == 0x0004D0, "Member 'UVR_InfoWindow_C::EndImage_1' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, EndImage_2) == 0x0004D8, "Member 'UVR_InfoWindow_C::EndImage_2' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, EndImage_3) == 0x0004E0, "Member 'UVR_InfoWindow_C::EndImage_3' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, EndImage_4) == 0x0004E8, "Member 'UVR_InfoWindow_C::EndImage_4' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, EndImage_61) == 0x0004F0, "Member 'UVR_InfoWindow_C::EndImage_61' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, G2_Base1) == 0x0004F8, "Member 'UVR_InfoWindow_C::G2_Base1' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, G2_Base1_1) == 0x000500, "Member 'UVR_InfoWindow_C::G2_Base1_1' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, G2_Base1_2) == 0x000508, "Member 'UVR_InfoWindow_C::G2_Base1_2' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, G2_Base1_3) == 0x000510, "Member 'UVR_InfoWindow_C::G2_Base1_3' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, G2_Base1_4) == 0x000518, "Member 'UVR_InfoWindow_C::G2_Base1_4' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, G2_Base1_5) == 0x000520, "Member 'UVR_InfoWindow_C::G2_Base1_5' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, G3_Base1) == 0x000528, "Member 'UVR_InfoWindow_C::G3_Base1' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, G4_Base) == 0x000530, "Member 'UVR_InfoWindow_C::G4_Base' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, G4_Base_1) == 0x000538, "Member 'UVR_InfoWindow_C::G4_Base_1' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Icon_Item) == 0x000540, "Member 'UVR_InfoWindow_C::Icon_Item' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Icon_Item_G2) == 0x000548, "Member 'UVR_InfoWindow_C::Icon_Item_G2' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Icon_X_G1) == 0x000550, "Member 'UVR_InfoWindow_C::Icon_X_G1' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Icon_X_G2) == 0x000558, "Member 'UVR_InfoWindow_C::Icon_X_G2' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Img_Frog) == 0x000560, "Member 'UVR_InfoWindow_C::Img_Frog' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Line1) == 0x000568, "Member 'UVR_InfoWindow_C::Line1' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Line1_1) == 0x000570, "Member 'UVR_InfoWindow_C::Line1_1' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Line2) == 0x000578, "Member 'UVR_InfoWindow_C::Line2' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Line3) == 0x000580, "Member 'UVR_InfoWindow_C::Line3' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Line4) == 0x000588, "Member 'UVR_InfoWindow_C::Line4' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Line5) == 0x000590, "Member 'UVR_InfoWindow_C::Line5' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, ListBgSet) == 0x000598, "Member 'UVR_InfoWindow_C::ListBgSet' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, LogoSet) == 0x0005A0, "Member 'UVR_InfoWindow_C::LogoSet' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, RankBase) == 0x0005A8, "Member 'UVR_InfoWindow_C::RankBase' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, RecommendLevel) == 0x0005B0, "Member 'UVR_InfoWindow_C::RecommendLevel' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_Alarm) == 0x0005B8, "Member 'UVR_InfoWindow_C::Txt_Alarm' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_DifficultyTitle_1) == 0x0005C0, "Member 'UVR_InfoWindow_C::Txt_DifficultyTitle_1' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_Group2Title) == 0x0005C8, "Member 'UVR_InfoWindow_C::Txt_Group2Title' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_ItemName_G2) == 0x0005D0, "Member 'UVR_InfoWindow_C::Txt_ItemName_G2' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_ItemNum_G2) == 0x0005D8, "Member 'UVR_InfoWindow_C::Txt_ItemNum_G2' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_Member4) == 0x0005E0, "Member 'UVR_InfoWindow_C::Txt_Member4' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_Member5) == 0x0005E8, "Member 'UVR_InfoWindow_C::Txt_Member5' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_Member6) == 0x0005F0, "Member 'UVR_InfoWindow_C::Txt_Member6' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_PrizeTitle) == 0x0005F8, "Member 'UVR_InfoWindow_C::Txt_PrizeTitle' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_Rank) == 0x000600, "Member 'UVR_InfoWindow_C::Txt_Rank' has a wrong offset!");
static_assert(offsetof(UVR_InfoWindow_C, Txt_Time2) == 0x000608, "Member 'UVR_InfoWindow_C::Txt_Time2' has a wrong offset!");

}

