#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VR_CharaNum

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass VR_CharaNum.VR_CharaNum_C
// 0x0028 (0x03F0 - 0x03C8)
class UVR_CharaNum_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Party1Color;                                       // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Party2Color;                                       // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              BaseC;                                             // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              FrameC;                                            // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Num;                                           // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VR_CharaNum_C">();
	}
	static class UVR_CharaNum_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVR_CharaNum_C>();
	}
};
static_assert(alignof(UVR_CharaNum_C) == 0x000008, "Wrong alignment on UVR_CharaNum_C");
static_assert(sizeof(UVR_CharaNum_C) == 0x0003F0, "Wrong size on UVR_CharaNum_C");
static_assert(offsetof(UVR_CharaNum_C, Party1Color) == 0x0003C8, "Member 'UVR_CharaNum_C::Party1Color' has a wrong offset!");
static_assert(offsetof(UVR_CharaNum_C, Party2Color) == 0x0003D0, "Member 'UVR_CharaNum_C::Party2Color' has a wrong offset!");
static_assert(offsetof(UVR_CharaNum_C, BaseC) == 0x0003D8, "Member 'UVR_CharaNum_C::BaseC' has a wrong offset!");
static_assert(offsetof(UVR_CharaNum_C, FrameC) == 0x0003E0, "Member 'UVR_CharaNum_C::FrameC' has a wrong offset!");
static_assert(offsetof(UVR_CharaNum_C, Txt_Num) == 0x0003E8, "Member 'UVR_CharaNum_C::Txt_Num' has a wrong offset!");

}

