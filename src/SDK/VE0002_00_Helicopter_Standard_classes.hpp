#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VE0002_00_Helicopter_Standard

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass VE0002_00_Helicopter_Standard.VE0002_00_Helicopter_Standard_C
// 0x0060 (0x1650 - 0x15F0)
class AVE0002_00_Helicopter_Standard_C final : public AEndCharacter
{
public:
	uint8                                         Pad_15E8[0x8];                                     // 0x15E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UEndVehicleSEComponent*                 EndVehicleSE;                                      // 0x15F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBonamikRaycastWindComponent*        EndBonamikRaycastWind;                             // 0x15F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBodyCollisionPrimitive*             MainBody06;                                        // 0x1600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBodyCollisionPrimitive*             MainBody05;                                        // 0x1608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBodyCollisionPrimitive*             MainBody04;                                        // 0x1610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBodyCollisionPrimitive*             Tail02;                                            // 0x1618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBodyCollisionPrimitive*             MainBody03;                                        // 0x1620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBodyCollisionPrimitive*             MainBody02;                                        // 0x1628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBodyCollisionPrimitive*             Tail01;                                            // 0x1630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBodyCollisionPrimitive*             MainBody01;                                        // 0x1638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndBikeCharacterComponent*             EndBikeCharacter;                                  // 0x1640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VE0002_00_Helicopter_Standard_C">();
	}
	static class AVE0002_00_Helicopter_Standard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVE0002_00_Helicopter_Standard_C>();
	}
};
static_assert(alignof(AVE0002_00_Helicopter_Standard_C) == 0x000010, "Wrong alignment on AVE0002_00_Helicopter_Standard_C");
static_assert(sizeof(AVE0002_00_Helicopter_Standard_C) == 0x001650, "Wrong size on AVE0002_00_Helicopter_Standard_C");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, EndVehicleSE) == 0x0015F0, "Member 'AVE0002_00_Helicopter_Standard_C::EndVehicleSE' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, EndBonamikRaycastWind) == 0x0015F8, "Member 'AVE0002_00_Helicopter_Standard_C::EndBonamikRaycastWind' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, MainBody06) == 0x001600, "Member 'AVE0002_00_Helicopter_Standard_C::MainBody06' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, MainBody05) == 0x001608, "Member 'AVE0002_00_Helicopter_Standard_C::MainBody05' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, MainBody04) == 0x001610, "Member 'AVE0002_00_Helicopter_Standard_C::MainBody04' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, Tail02) == 0x001618, "Member 'AVE0002_00_Helicopter_Standard_C::Tail02' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, MainBody03) == 0x001620, "Member 'AVE0002_00_Helicopter_Standard_C::MainBody03' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, MainBody02) == 0x001628, "Member 'AVE0002_00_Helicopter_Standard_C::MainBody02' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, Tail01) == 0x001630, "Member 'AVE0002_00_Helicopter_Standard_C::Tail01' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, MainBody01) == 0x001638, "Member 'AVE0002_00_Helicopter_Standard_C::MainBody01' has a wrong offset!");
static_assert(offsetof(AVE0002_00_Helicopter_Standard_C, EndBikeCharacter) == 0x001640, "Member 'AVE0002_00_Helicopter_Standard_C::EndBikeCharacter' has a wrong offset!");

}

