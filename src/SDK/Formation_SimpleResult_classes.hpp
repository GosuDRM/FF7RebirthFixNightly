#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Formation_SimpleResult

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Formation_SimpleResult.Formation_SimpleResult_C
// 0x00D8 (0x04A0 - 0x03C8)
class UFormation_SimpleResult_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base1;                                             // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base2;                                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base3;                                             // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base4;                                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base5;                                             // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light1;                                            // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light2;                                            // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light3;                                            // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light4;                                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light5;                                            // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line1;                                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line2;                                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line3;                                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line4;                                             // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line5;                                             // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Bad;                                           // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Bad_Value;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_FormationBouns;                                // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_FormationBouns_Value;                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Good;                                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Good_Value;                                    // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Great;                                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Great_Value;                                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_MaxCombo;                                      // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_MaxCombo_Value;                                // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Formation_SimpleResult_C">();
	}
	static class UFormation_SimpleResult_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFormation_SimpleResult_C>();
	}
};
static_assert(alignof(UFormation_SimpleResult_C) == 0x000008, "Wrong alignment on UFormation_SimpleResult_C");
static_assert(sizeof(UFormation_SimpleResult_C) == 0x0004A0, "Wrong size on UFormation_SimpleResult_C");
static_assert(offsetof(UFormation_SimpleResult_C, Out) == 0x0003C8, "Member 'UFormation_SimpleResult_C::Out' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, In) == 0x0003D0, "Member 'UFormation_SimpleResult_C::In' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Base1) == 0x0003D8, "Member 'UFormation_SimpleResult_C::Base1' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Base2) == 0x0003E0, "Member 'UFormation_SimpleResult_C::Base2' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Base3) == 0x0003E8, "Member 'UFormation_SimpleResult_C::Base3' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Base4) == 0x0003F0, "Member 'UFormation_SimpleResult_C::Base4' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Base5) == 0x0003F8, "Member 'UFormation_SimpleResult_C::Base5' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Light1) == 0x000400, "Member 'UFormation_SimpleResult_C::Light1' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Light2) == 0x000408, "Member 'UFormation_SimpleResult_C::Light2' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Light3) == 0x000410, "Member 'UFormation_SimpleResult_C::Light3' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Light4) == 0x000418, "Member 'UFormation_SimpleResult_C::Light4' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Light5) == 0x000420, "Member 'UFormation_SimpleResult_C::Light5' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Line1) == 0x000428, "Member 'UFormation_SimpleResult_C::Line1' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Line2) == 0x000430, "Member 'UFormation_SimpleResult_C::Line2' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Line3) == 0x000438, "Member 'UFormation_SimpleResult_C::Line3' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Line4) == 0x000440, "Member 'UFormation_SimpleResult_C::Line4' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Line5) == 0x000448, "Member 'UFormation_SimpleResult_C::Line5' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_Bad) == 0x000450, "Member 'UFormation_SimpleResult_C::Txt_Bad' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_Bad_Value) == 0x000458, "Member 'UFormation_SimpleResult_C::Txt_Bad_Value' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_FormationBouns) == 0x000460, "Member 'UFormation_SimpleResult_C::Txt_FormationBouns' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_FormationBouns_Value) == 0x000468, "Member 'UFormation_SimpleResult_C::Txt_FormationBouns_Value' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_Good) == 0x000470, "Member 'UFormation_SimpleResult_C::Txt_Good' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_Good_Value) == 0x000478, "Member 'UFormation_SimpleResult_C::Txt_Good_Value' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_Great) == 0x000480, "Member 'UFormation_SimpleResult_C::Txt_Great' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_Great_Value) == 0x000488, "Member 'UFormation_SimpleResult_C::Txt_Great_Value' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_MaxCombo) == 0x000490, "Member 'UFormation_SimpleResult_C::Txt_MaxCombo' has a wrong offset!");
static_assert(offsetof(UFormation_SimpleResult_C, Txt_MaxCombo_Value) == 0x000498, "Member 'UFormation_SimpleResult_C::Txt_MaxCombo_Value' has a wrong offset!");

}

