#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MobPrefabTemplate_ReactionAndContact_05

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MobPrefabTemplate_ReactionAndContact_04_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MobPrefabTemplate_ReactionAndContact_05.MobPrefabTemplate_ReactionAndContact_05_C
// 0x0270 (0x1130 - 0x0EC0)
class AMobPrefabTemplate_ReactionAndContact_05_C : public AMobPrefabTemplate_ReactionAndContact_04_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_MobPrefabTemplate_ReactionAndContact_05_C; // 0x0EC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	TSoftClassPtr<class UClass>                   CharacterClass05;                                  // 0x0EC8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   LoopMotionName05;                                  // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   AttachActor05;                                     // 0x0EF8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   AttachSocketName05;                                // 0x0F20(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableReaction05;                                  // 0x0F28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableContact05;                                   // 0x0F29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ContactDuringReaction05;                           // 0x0F2A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2B[0x1];                                      // 0x0F2B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ContactForwardLeftMotionName05;                    // 0x0F2C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactForwardRightMotionName05;                   // 0x0F34(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactBackLeftMotionName05;                       // 0x0F3C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactBackRightMotionName05;                      // 0x0F44(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactBlendTime05;                                // 0x0F4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FName>                ContactPropagateMotionTable05;                     // 0x0F50(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateForwardLeftMotionTable05;          // 0x0FA0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateForwardRightMotionTable05;         // 0x0FF0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateBackLeftMotionTable05;             // 0x1040(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateBackRightMotionTable05;            // 0x1090(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ContactPropagateBlendTime05;                       // 0x10E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutMotionName05;                            // 0x10E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactOutBlendTime05;                             // 0x10EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutReplaceBaseMotionName05;                 // 0x10F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionMotionName05;                              // 0x10F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionBlendTime05;                               // 0x1100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionReplaceBaseMotionName05;                   // 0x1104(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionOutMotionName05;                           // 0x110C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionOutBlendTime05;                            // 0x1114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionOutReplaceBaseMotionName05;                // 0x1118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReactionOnce05;                                    // 0x1120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void GetContext(class FName MobId, bool* EnableReaction, bool* EnableContact, bool* ContactDuringReaction, class FName* ForwardLeftMotion, class FName* ForwardRightMotion, class FName* BackLeftMotion, class FName* BackRightMotion, float* ContactBlendTime, TMap<class FName, class FName>* ContactPropagateMotionTable, TMap<class FName, class FName>* ContactPropagateForwardLeftMotionTable, TMap<class FName, class FName>* ContactPropagateForwardRightMotionTable, TMap<class FName, class FName>* ContactPropagateBackLeftMotionTable, TMap<class FName, class FName>* ContactPropagateBackRightMotionTable, float* ContactPropagateBlendTime, class FName* ContactOutMotionName, float* ContactOutBlendTime, class FName* ContactOutReplaceBaseMotionName, class FName* Motion, float* BlendTime, class FName* ReplaceBaseMotion, class FName* ReactionOutMotionName, float* ReactionOutBlendTime, class FName* ReactionOutReplaceBaseMotionName, bool* PlayMotionOnce);
	void ExecuteUbergraph_MobPrefabTemplate_ReactionAndContact_05(int32 EntryPoint);
	void OnPreUpdateRegistry();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MobPrefabTemplate_ReactionAndContact_05_C">();
	}
	static class AMobPrefabTemplate_ReactionAndContact_05_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMobPrefabTemplate_ReactionAndContact_05_C>();
	}
};
static_assert(alignof(AMobPrefabTemplate_ReactionAndContact_05_C) == 0x000010, "Wrong alignment on AMobPrefabTemplate_ReactionAndContact_05_C");
static_assert(sizeof(AMobPrefabTemplate_ReactionAndContact_05_C) == 0x001130, "Wrong size on AMobPrefabTemplate_ReactionAndContact_05_C");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, UberGraphFrame_MobPrefabTemplate_ReactionAndContact_05_C) == 0x000EC0, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::UberGraphFrame_MobPrefabTemplate_ReactionAndContact_05_C' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, CharacterClass05) == 0x000EC8, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::CharacterClass05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, LoopMotionName05) == 0x000EF0, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::LoopMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, AttachActor05) == 0x000EF8, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::AttachActor05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, AttachSocketName05) == 0x000F20, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::AttachSocketName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, EnableReaction05) == 0x000F28, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::EnableReaction05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, EnableContact05) == 0x000F29, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::EnableContact05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactDuringReaction05) == 0x000F2A, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactDuringReaction05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactForwardLeftMotionName05) == 0x000F2C, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactForwardLeftMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactForwardRightMotionName05) == 0x000F34, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactForwardRightMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactBackLeftMotionName05) == 0x000F3C, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactBackLeftMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactBackRightMotionName05) == 0x000F44, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactBackRightMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactBlendTime05) == 0x000F4C, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactBlendTime05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactPropagateMotionTable05) == 0x000F50, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactPropagateMotionTable05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactPropagateForwardLeftMotionTable05) == 0x000FA0, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactPropagateForwardLeftMotionTable05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactPropagateForwardRightMotionTable05) == 0x000FF0, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactPropagateForwardRightMotionTable05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactPropagateBackLeftMotionTable05) == 0x001040, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactPropagateBackLeftMotionTable05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactPropagateBackRightMotionTable05) == 0x001090, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactPropagateBackRightMotionTable05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactPropagateBlendTime05) == 0x0010E0, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactPropagateBlendTime05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactOutMotionName05) == 0x0010E4, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactOutMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactOutBlendTime05) == 0x0010EC, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactOutBlendTime05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ContactOutReplaceBaseMotionName05) == 0x0010F0, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ContactOutReplaceBaseMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ReactionMotionName05) == 0x0010F8, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ReactionMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ReactionBlendTime05) == 0x001100, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ReactionBlendTime05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ReactionReplaceBaseMotionName05) == 0x001104, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ReactionReplaceBaseMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ReactionOutMotionName05) == 0x00110C, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ReactionOutMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ReactionOutBlendTime05) == 0x001114, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ReactionOutBlendTime05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ReactionOutReplaceBaseMotionName05) == 0x001118, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ReactionOutReplaceBaseMotionName05' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_05_C, ReactionOnce05) == 0x001120, "Member 'AMobPrefabTemplate_ReactionAndContact_05_C::ReactionOnce05' has a wrong offset!");

}

