#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SP_Summon_Alexander_01A_Physics

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SP_Summon_Alexander_01A_Physics.SP_Summon_Alexander_01A_Physics_C
// 0x00A8 (0x0938 - 0x0890)
class ASP_Summon_Alexander_01A_Physics_C final : public AEndSummonShrineGuideActor
{
public:
	class USplineComponent*                       Spline;                                            // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_9_Physics;                    // 0x0898(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_8_Physics;                    // 0x08A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_7_Physics;                    // 0x08A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_6_Physics;                    // 0x08B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_5_Physics;                    // 0x08B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_4_Physics;                    // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_3_Physics;                    // 0x08C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_2_Physics;                    // 0x08D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_20_Physics;                   // 0x08D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_1_Physics;                    // 0x08E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_19_Physics;                   // 0x08E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_18_Physics;                   // 0x08F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_17_Physics;                   // 0x08F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_16_Physics;                   // 0x0900(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_15_Physics;                   // 0x0908(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_14_Physics;                   // 0x0910(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_13_Physics;                   // 0x0918(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_12_Physics;                   // 0x0920(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_11_Physics;                   // 0x0928(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEndStaticMeshPhysicsPartsComponent*    Summon_Alexander_01A_10_Physics;                   // 0x0930(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SP_Summon_Alexander_01A_Physics_C">();
	}
	static class ASP_Summon_Alexander_01A_Physics_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASP_Summon_Alexander_01A_Physics_C>();
	}
};
static_assert(alignof(ASP_Summon_Alexander_01A_Physics_C) == 0x000008, "Wrong alignment on ASP_Summon_Alexander_01A_Physics_C");
static_assert(sizeof(ASP_Summon_Alexander_01A_Physics_C) == 0x000938, "Wrong size on ASP_Summon_Alexander_01A_Physics_C");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Spline) == 0x000890, "Member 'ASP_Summon_Alexander_01A_Physics_C::Spline' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_9_Physics) == 0x000898, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_9_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_8_Physics) == 0x0008A0, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_8_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_7_Physics) == 0x0008A8, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_7_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_6_Physics) == 0x0008B0, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_6_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_5_Physics) == 0x0008B8, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_5_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_4_Physics) == 0x0008C0, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_4_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_3_Physics) == 0x0008C8, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_3_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_2_Physics) == 0x0008D0, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_2_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_20_Physics) == 0x0008D8, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_20_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_1_Physics) == 0x0008E0, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_1_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_19_Physics) == 0x0008E8, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_19_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_18_Physics) == 0x0008F0, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_18_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_17_Physics) == 0x0008F8, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_17_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_16_Physics) == 0x000900, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_16_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_15_Physics) == 0x000908, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_15_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_14_Physics) == 0x000910, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_14_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_13_Physics) == 0x000918, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_13_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_12_Physics) == 0x000920, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_12_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_11_Physics) == 0x000928, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_11_Physics' has a wrong offset!");
static_assert(offsetof(ASP_Summon_Alexander_01A_Physics_C, Summon_Alexander_01A_10_Physics) == 0x000930, "Member 'ASP_Summon_Alexander_01A_Physics_C::Summon_Alexander_01A_10_Physics' has a wrong offset!");

}

